<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:WPF="clr-namespace:Graphviz4Net.WPF;assembly=Graphviz4Net.WPF"  
             xmlns:ViewModels="clr-namespace:Graphviz4Net.WPF.ViewModels;assembly=Graphviz4Net.WPF"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ResourseScanner"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" x:Class="ResourseScanner.GraphView"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="631">
    <UserControl.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/ResourseScanner;component/Themes/ButtonPlain.xaml"/>
                <ResourceDictionary Source="/ResourseScanner;component/Themes/TextBox.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <DataTemplate x:Key="App.Template.Node.Color">
                <Ellipse Width="20" Height="20" Stroke="White" StrokeThickness="1">
                    <Ellipse.Fill>
                        <SolidColorBrush Color="{Binding Entry.Value}"/>
                    </Ellipse.Fill>
                </Ellipse>
            </DataTemplate>

            <DataTemplate x:Key="App.Template.Node.ViewBox">
                <Border Width="50" Height="50"
            		CornerRadius="2"
            		BorderThickness="1"
            		BorderBrush="White"
            		ToolTipService.InitialShowDelay="0"
            		ToolTip="{Binding Entry.Key}">
                    <Border.Background>
                        <VisualBrush Visual="{Binding Entry.Value}" Stretch="Uniform"/>
                    </Border.Background>
                    <!--<Border.ToolTip>
                                <ToolTip Content="{Binding Entry.Key}"/>
                            </Border.ToolTip>-->
                </Border>
            </DataTemplate>

            <Style x:Key="App.Style.ToggleButton.Dictionary" TargetType="{x:Type ToggleButton}">
                <Setter Property="Background" Value="#FF252526"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Grid>
                                <!--<Ellipse Width="125" Height="125" Fill="#FF595959"/>-->
                                <Border BorderBrush="White" BorderThickness="{Binding BorderSize}" CornerRadius="200" 
            						Width="{Binding Size}" Height="{Binding Size}" Padding="2,1"
            						Background="{TemplateBinding Background}">
                                    <!--<Border.RenderTransform>
                                    <ScaleTransform ScaleX="{Binding Scale}" ScaleY="{Binding Scale}"/>
                                </Border.RenderTransform>-->
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Background" Value="#FF8D8888"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#FF595959"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <DataTemplate x:Key="App.Template.Node.Dictionary">
                <ToggleButton x:Name="toggle" IsChecked="{Binding IsHighligted}"
            		Style="{StaticResource App.Style.ToggleButton.Dictionary}"
            		Command="Refresh" CommandParameter="{Binding}">
                    <Grid>
                        <TextBlock Text="{Binding FileName}" TextWrapping="Wrap" Foreground="White"/>
                        <Popup x:Name="mergedFiles" Placement="Top">
                            <Border Background="Silver" TextBlock.Foreground="Black" Padding="10">
                                <ItemsControl ItemsSource="{Binding MergedFiles}" DisplayMemberPath="FileName"/>
                            </Border>
                        </Popup>
                        <Popup x:Name="childResources" Placement="Bottom">
                            <Border Background="Silver" TextBlock.Foreground="Black" Padding="10">
                                <ItemsControl ItemsSource="{Binding Childs}" DisplayMemberPath="Entry.Key"/>
                            </Border>
                        </Popup>
                    </Grid>
                </ToggleButton>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsDictionary}" Value="False">
                        <Setter Property="Background" TargetName="toggle" Value="#FF2D406A"/>
                    </DataTrigger>
                    <Trigger Property="IsMouseOver" SourceName="toggle" Value="True">
                        <Setter Property="IsOpen" TargetName="mergedFiles" Value="True"/>
                        <Setter Property="IsOpen" TargetName="childResources" Value="True"/>
                    </Trigger>

                </DataTemplate.Triggers>
            </DataTemplate>

            <local:ResourceNodeTemplateSelector x:Key="nodeTemplateSelector"/>

            <DataTemplate DataType="{x:Type local:GraphNodeViewModelBase}">
                <ContentControl Content="{Binding}" ContentTemplateSelector="{StaticResource nodeTemplateSelector}"/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type local:DiamondArrow}">
                <Canvas Width="6" Height="11">
                    <Polygon Points="3,0 6,5 3,10 0,5" Stroke="Black" StrokeThickness="1" Fill="LightGray"/>
                </Canvas>
            </DataTemplate>

            <DataTemplate DataType="{x:Type local:Arrow}">
                <Path Data="M 0,0 L 20,0 L 10,10 L 0,0" Stroke="Black" StrokeThickness="1"/>
            </DataTemplate>

            <!--<DataTemplate DataType="{x:Type Example:DiamondArrow}">
                        <Canvas Width="6" Height="11">
                            <Polygon Points="3,0 6,5 3,10 0,5" Stroke="Black" StrokeThickness="1" Fill="Black"/>
                        </Canvas>
                    </DataTemplate>-->

            <!--<DataTemplate DataType="{x:Type ViewModels:EdgeViewModel}">
                        <Path Data="{Binding Data}" Stroke="Gray" StrokeThickness="1"/>
                    </DataTemplate>-->

            <!--  -->

            <DataTemplate x:Key="App.Template.Node.View">
                <Border x:Name="border" Width="{Binding Size}" Height="{Binding Size}" 
            		CornerRadius="400" Background="#FF252526"
            		BorderThickness="{Binding BorderSize}" BorderBrush="#FFD6D6D6"
            		Padding="2">
                    <TextBlock Text="{Binding Name}" TextWrapping="Wrap" ToolTip="{Binding FullName}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </Border>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsWindow}" Value="True">
                        <Setter Property="Background" TargetName="border" Value="#FF81A9E4"/>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <DataTemplate x:Key="App.Template.Node.ViewModel">
                <Border Width="{Binding Size}" Height="{Binding Size}"
            		Background="#FF252526"
            		BorderThickness="{Binding BorderSize}" BorderBrush="#FFD6D6D6"
            		Padding="2">
                    <TextBlock Text="{Binding Name}" TextWrapping="Wrap" ToolTip="{Binding FullName}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </Border>
            </DataTemplate>

        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.CommandBindings>
        <CommandBinding Command="Refresh" Executed="DetailsRefresh_Executed"/>
        <CommandBinding Command="Save" Executed="Save_Executed"/>
    </UserControl.CommandBindings>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="2"/>
            <ColumnDefinition Width="300"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <TextBlock/>

        <Grid x:Name="searchGrid" Grid.Column="2" 
              KeyboardNavigation.DirectionalNavigation="Local"
              KeyboardNavigation.TabNavigation="Local">
            <Grid.InputBindings>
                <KeyBinding Key="Enter" Command="Find" CommandParameter="{Binding SelectedValue, ElementName=searchResultsListBox}"/>
            </Grid.InputBindings>
            <TextBox x:Name="searchTextBox"  Style="{StaticResource App.Style.TextBox.Default}" BorderBrush="#FF5B5B5B" BorderThickness="1" Margin="2"
				KeyUp="searchTextBox_KeyDown" />
            <Popup x:Name="searchResultsPopup" 
                   PlacementTarget="{Binding ElementName=searchTextBox}" 
                   Placement="Bottom">
                <ListBox x:Name="searchResultsListBox" ItemsSource="{Binding SearchResults, RelativeSource={RelativeSource AncestorType={x:Type local:GraphView}}}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseDown">
                            <i:InvokeCommandAction Command="Find" CommandParameter="{Binding SelectedValue, ElementName=searchResultsListBox}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListBox>
            </Popup>
        </Grid>

        <ScrollViewer x:Name="scrollViewer" Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel" >
            <WPF:GraphLayout x:Name="graph" Graph="{Binding Graph, Mode=OneWay}">
                <WPF:GraphLayout.LayoutTransform>
                    <ScaleTransform x:Name="scaleTransform"/>
                </WPF:GraphLayout.LayoutTransform>
            </WPF:GraphLayout>
        </ScrollViewer>
        <Button HorizontalAlignment="Right" Margin="5" Content="Save" Command="Save" Style="{StaticResource App.Style.Button.Plain}"/>
        <GridSplitter Grid.Column="1" Grid.RowSpan="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="Silver"/>
        <local:ResourceNodeDetails x:Name="nodeDetails" Grid.Column="2" Grid.Row="1" Margin="5"/>
    </Grid>
</UserControl>
